{"version":3,"sources":["Card.js","CardList.js","Searchbox.js","Scroll.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","id","alt","name","email","CardList","robots","cardcomponent","map","user","i","Searchbox","searchfield","searchchange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","onsearchchange","event","setState","target","value","state","fetch","then","response","json","users","filterrobot","this","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAceA,EAZJ,SAACC,GACT,OACG,sBAAKC,UAAU,sDAAf,UACG,qBAAKC,IAAG,+BAA0BF,EAAMG,GAAhC,YAA8CC,IAAK,UAC3D,gCACG,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCMPC,EAXA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACRC,EAAcD,EAAOE,KAAI,SAACC,EAAMC,GACnC,OAAO,cAAC,EAAD,CAAcT,GAAIK,EAAOI,GAAGT,GAAIE,KAAMG,EAAOI,GAAGP,KAAMC,MAAOE,EAAOI,GAAGN,OAA5DM,MAErB,OACG,8BACIH,KCMKI,EAbC,SAAC,GAA8B,EAA7BC,YAA8B,IAAjBC,EAAgB,EAAhBA,aAC5B,OACE,qBAAKd,UAAU,SAAf,SACI,uBACAA,UAAU,mCACVe,KAAK,SACLC,YAAY,eACZC,SAAUH,OCEJI,G,MATF,SAACnB,GAEX,OACG,qBAAKoB,MAAO,CAACC,UAAU,SAAUC,OAAO,kBAAkBC,OAAO,SAAjE,SACIvB,EAAMwB,aC4CDC,E,kDA1CZ,aAAc,IAAD,8BACV,gBAgBHC,eAAe,SAACC,GACb,EAAKC,SAAS,CAACd,YAAYa,EAAME,OAAOC,SAhBxC,EAAKC,MAAM,CACRvB,OAAO,GACPM,YAAY,IAJL,E,gEAQO,IAAD,OAChBkB,MAAM,6CACLC,MAAK,SAAAC,GACH,OAAOA,EAASC,UAElBF,MAAK,SAAAG,GAAS,EAAKR,SAAS,CAACpB,OAAO4B,S,+BAS/B,IAAD,OACCC,EAAaC,KAAKP,MAAMvB,OAAO+B,QAAO,SAAA/B,GACzC,OAAOA,EAAOH,KAAKmC,cAAcC,SAAS,EAAKV,MAAMjB,YAAY0B,kBAEpE,OAA+B,IAA3BF,KAAKP,MAAMvB,OAAOkC,OACZ,4CAGJ,gCACG,oBAAIzC,UAAU,QAAd,wBACA,cAAC,EAAD,CAAWc,aAAcuB,KAAKZ,iBAC9B,cAAC,EAAD,UACG,cAAC,EAAD,CAAUlB,OAAQ6B,a,GAnClBM,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,EAAD,IACCC,SAASC,eAAe,SAG3BX,M","file":"static/js/main.d27409df.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card=(props)=>{\r\n   return (\r\n      <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n         <img src={`https://robohash.org/${props.id}?150x150`} alt =\"robot\"/>\r\n         <div>\r\n            <h2>{props.name}</h2>\r\n            <p>{props.email}</p>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n// using react import is support html content\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList=({robots})=>{\r\n   const cardcomponent=robots.map((user, i)=>{\r\n      return <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\r\n   })\r\n   return (\r\n      <div>\r\n         {cardcomponent}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Searchbox=({searchfield, searchchange})=>{\r\n   return (\r\n     <div className='tc pa2'>\r\n         <input \r\n         className='pa3 ba b--green bg-lightest-blue' \r\n         type='search' \r\n         placeholder='Search Robot' \r\n         onChange={searchchange}\r\n         />\r\n     </div>\r\n   );\r\n}\r\n\r\nexport default Searchbox;","import React from 'react';\r\n\r\nconst Scroll=(props)=>{\r\n   // return props.children;\r\n   return (\r\n      <div style={{overflowY:'scroll', border:'2px solid black',height:'800px' }}>\r\n         {props.children}\r\n      </div>\r\n   )\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport {robots} from './robots';\r\nimport CardList from './CardList';\r\nimport Searchbox from './Searchbox';\r\nimport './App.css';\r\nimport Scroll from './Scroll';\r\n\r\nclass App extends Component{\r\n   constructor(){\r\n      super()\r\n      this.state={\r\n         robots:[],\r\n         searchfield:''\r\n      }\r\n   }\r\n\r\n   componentDidMount(){\r\n      fetch('http://jsonplaceholder.typicode.com/users')\r\n      .then(response=>{\r\n         return response.json();\r\n      })\r\n      .then(users=> {this.setState({robots:users})});\r\n      // this.setState({robots:robots});\r\n   }\r\n\r\n   onsearchchange=(event)=>{\r\n      this.setState({searchfield:event.target.value})\r\n      \r\n   }\r\n\r\n   render(){\r\n      const filterrobot= this.state.robots.filter(robots=>{\r\n         return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n      })\r\n      if (this.state.robots.length===0){\r\n         return <h1>Loading...</h1>\r\n      }else{\r\n         return (\r\n            <div>\r\n               <h1 className='tc f1'>RoboFriend</h1>\r\n               <Searchbox searchchange={this.onsearchchange}/>\r\n               <Scroll>\r\n                  <CardList robots={filterrobot}/>\r\n               </Scroll>\r\n            </div>\r\n         );\r\n      }\r\n   };\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from \"./App\";\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\n\r\nReactDOM.render(\r\n  <App />  \r\n  ,document.getElementById('root'));\r\n\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}